version: "3"

services:

    #===== Keymakers ===========================================================

    acra-keymaker_server:
        image: "cossacklabs/acra-keymaker:${ACRA_DOCKER_IMAGE_TAG:-latest}"
        network_mode: "none"
        environment:
            # INSECURE!!! You MUST define your own ACRA_SERVER_MASTER_KEY and ACRA_CONNECTOR_MASTER_KEY
            # The default is only for testing purposes
            ACRA_MASTER_KEY: ${ACRA_SERVER_MASTER_KEY:-N0MyZEVCRGY1cHA4ODRSVHp3c3BNeGtDekxaV3BhTHI=}
        volumes:
            - ./.acrakeys:/keys
        command: >-
            --client_id=${ACRA_CLIENT_ID:-testclientid}
            --generate_acraserver_keys
            --keys_output_dir=/keys/acra-server
            --keys_public_output_dir=/keys/acra-connector

    acra-keymaker_connector:
        image: "cossacklabs/acra-keymaker:${ACRA_DOCKER_IMAGE_TAG:-latest}"
        network_mode: "none"
        environment:
            ACRA_MASTER_KEY: ${ACRA_CONNECTOR_MASTER_KEY:-MElBVnhEeTd3b29JMFVVcnhGMXJPT3BxZUVwWW5wS3E=}
        volumes:
            - ./.acrakeys:/keys
        command: >-
            --client_id=${ACRA_CLIENT_ID:-testclientid}
            --generate_acraconnector_keys
            --keys_output_dir=/keys/acra-connector
            --keys_public_output_dir=/keys/acra-server

    acra-keymaker_writer:
        image: "cossacklabs/acra-keymaker:${ACRA_DOCKER_IMAGE_TAG:-latest}"
        network_mode: "none"
        environment:
            ACRA_MASTER_KEY: ${ACRA_SERVER_MASTER_KEY:-N0MyZEVCRGY1cHA4ODRSVHp3c3BNeGtDekxaV3BhTHI=}
        volumes:
            - ./.acrakeys:/keys
        command: >-
            --client_id=${ACRA_CLIENT_ID:-testclientid}
            --generate_acrawriter_keys
            --keys_output_dir=/keys/acra-server
            --keys_public_output_dir=/keys/acra-writer


    #===== Databases ===========================================================

    pgsql-master:
        build:
            context: ./
            dockerfile: pgsql-replication.dockerfile
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test}
            POSTGRES_DB: ${POSTGRES_DB:-test}
            POSTGRES_REPLICATION_USER: ${POSTGRES_REPLICATION_USER:-replica}
            POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD:-2QTkGNGuxEC25viP}
        ports:
            - "5434:5432"
            - "9001:9000"
        networks:
            - acraserver-m-pgsql-master
            # for healthchecks only
            - haproxy-pgsql
            - world

    pgsql-slave:
        depends_on:
          - pgsql-master
        build:
            context: ./
            dockerfile: pgsql-replication.dockerfile
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test}
            POSTGRES_REPLICATION_USER: ${POSTGRES_REPLICATION_USER:-replica}
            POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD:-2QTkGNGuxEC25viP}
            POSTGRES_REPLICATION_MASTER_HOST: pgsql-master
        ports:
            - "5435:5432"
            - "9002:9000"
        networks:
            - acraserver-s-pgsql-slave
            # for healthchecks only
            - haproxy-pgsql
            - world


    #===== AcraServer ==============================================================

    acra-server-m:
        image: "cossacklabs/acra-server:${ACRA_DOCKER_IMAGE_TAG:-latest}"
        restart: always
        depends_on:
            - acra-keymaker_server
            - acra-keymaker_connector
            - acra-keymaker_writer
            - pgsql-master
        environment:
            ACRA_MASTER_KEY: ${ACRA_SERVER_MASTER_KEY:-N0MyZEVCRGY1cHA4ODRSVHp3c3BNeGtDekxaV3BhTHI=}
        networks:
            - acraserver-m-pgsql-master
            - haproxy-acraserver
        volumes:
            - ./.acrakeys/acra-server:/keys
            - ./.acraconfigs/acra-server-m:/config
        command: >-
            --db_host=pgsql-master
            --db_port=5432
            --keys_dir=/keys
            -v

    acra-server-s:
        image: "cossacklabs/acra-server:${ACRA_DOCKER_IMAGE_TAG:-latest}"
        restart: always
        depends_on:
            - acra-keymaker_server
            - acra-keymaker_connector
            - acra-keymaker_writer
            - pgsql-slave
        environment:
            ACRA_MASTER_KEY: ${ACRA_SERVER_MASTER_KEY:-N0MyZEVCRGY1cHA4ODRSVHp3c3BNeGtDekxaV3BhTHI=}
        networks:
            - acraserver-s-pgsql-slave
            - haproxy-acraserver
        volumes:
            - ./.acrakeys/acra-server:/keys
            - ./.acraconfigs/acra-server-s:/config
        command: >-
            --db_host=pgsql-slave
            --db_port=5432
            --keys_dir=/keys
            -v


    #===== HAProxy =============================================================

    haproxy:
        depends_on:
          - acra-server-s
          - acra-server-m
        build:
            context: ./
            dockerfile: haproxy-acra-pgsql.dockerfile
        ports:
            # RW
            - "9393:9393"
            # RO
            - "9394:9394"
        networks:
            - haproxy-acraserver
            - haproxy-pgsql
            - acraconnector-haproxy
            - world


    #===== AcraConnector =======================================================

    acra-connector-rw:
        image: "cossacklabs/acra-connector:${ACRA_DOCKER_IMAGE_TAG:-latest}"
        restart: always
        depends_on:
            - acra-keymaker_server
            - acra-keymaker_connector
            - haproxy
        ports:
            - "9494:9494"
        environment:
            ACRA_MASTER_KEY: ${ACRA_CONNECTOR_MASTER_KEY:-MElBVnhEeTd3b29JMFVVcnhGMXJPT3BxZUVwWW5wS3E=}
        networks:
            - acraconnector-haproxy
            - python-acraconnector
            - world
        volumes:
            - ./.acrakeys/acra-connector:/keys:ro
        command: >-
            --acraserver_connection_host=haproxy
            --acraserver_connection_port=9393
            --keys_dir=/keys
            --client_id=${ACRA_CLIENT_ID:-testclientid}
            --incoming_connection_string=tcp://0.0.0.0:9494
            -v

    acra-connector-ro:
        image: "cossacklabs/acra-connector:${ACRA_DOCKER_IMAGE_TAG:-latest}"
        restart: always
        depends_on:
            - acra-keymaker_server
            - acra-keymaker_connector
            - haproxy
        ports:
            - "9495:9494"
        environment:
            ACRA_MASTER_KEY: ${ACRA_CONNECTOR_MASTER_KEY:-MElBVnhEeTd3b29JMFVVcnhGMXJPT3BxZUVwWW5wS3E=}
        networks:
            - acraconnector-haproxy
            - python-acraconnector
            - world
        volumes:
            - ./.acrakeys/acra-connector:/keys:ro
        command: >-
            --acraserver_connection_host=haproxy
            --acraserver_connection_port=9394
            --keys_dir=/keys
            --client_id=${ACRA_CLIENT_ID:-testclientid}
            --incoming_connection_string=tcp://0.0.0.0:9494
            -v


    #===== Example client ==========================================================

    python:
        depends_on:
            - acra-keymaker_writer
            - acra-connector-rw
        build:
            context: ./
            dockerfile: acra-python-example.dockerfile
        environment:
            # No direct connection to DB, both directions through acra-connector
            DB_HOST: acra-connector-rw
            DB_PORT: 9494
            # Connectin through AcraConnector
            ACRA_CLIENT_ID: ${ACRA_CLIENT_ID:-testclientid}
            ACRA_CONNECTOR_HOST: acra-connector-rw
            ACRA_CONNECTOR_PORT: 9494
            # Demo script default cofiguration
            EXAMPLE_ACRA_CONNECTOR_API_ADDRESS: http://acra-connector-rw:9191
            EXAMPLE_HOST: acra-connector-rw
            EXAMPLE_PORT: 9494
            EXAMPLE_DB_USER: ${POSTGRES_USER:-postgres}
            EXAMPLE_DB_PASSWORD: ${POSTGRES_PASSWORD:-test}
            EXAMPLE_DB_NAME: ${POSTGRES_DB:-test}
            EXAMPLE_PUBLIC_KEY: "/app.acrakeys/${ACRA_CLIENT_ID:-testclientid}_storage.pub"
            EXAMPLE_POSTGRESQL: !!str 'true'
        networks:
            - python-acraconnector
        volumes:
            - ./.acrakeys/acra-writer:/app.acrakeys:ro


networks:
    world:
    acraserver-m-pgsql-master:
        internal: true
    acraserver-s-pgsql-slave:
        internal: true
    haproxy-acraserver:
        internal: true
    haproxy-pgsql:
        internal: true
    acraconnector-haproxy:
        internal: true
    python-acraconnector:
        internal: true
